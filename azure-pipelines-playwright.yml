trigger:
  branches:
    include:
      - main
      - stage
      - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  PipCache: $(Pipeline.Workspace)/.pip_cache
  HEADLESS: 'true'

stages:
  - stage: HeadlessTests
    displayName: 'Run Headless Tests'
    jobs:
      - job: RunHeadless
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.11'
              addToPath: true

          - script: |
              mkdir "$(PipCache)" || echo "Cache directory already exists"
            displayName: 'Create Pip Cache Directory'

          - task: Cache@2
            inputs:
              key: 'python | "$(Agent.OS)"  | requirements.txt'
              restoreKeys: |
                python | "$(Agent.OS)"
              path: $(PipCache)
            continueOnError: true

          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
              pip install pytest-html
            displayName: 'Install Python Dependencies'

          - script: |
              python -m playwright install --with-deps
            displayName: 'Install Playwright Browsers with Dependencies'

          - script: |
              export HEADLESS=true
              pytest tests/ --html=report_playwright_bdd.html --maxfail=3 --disable-warnings -v
            displayName: 'Run Headless Playwright BDD Tests'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'report_playwright_bdd.html'
              ArtifactName: 'TestReport'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'screenshots'

  # Stage for running tests in non-headless mode
  - stage: NonHeadlessTests
    displayName: 'Run Non-Headless Tests'
    jobs:
      - job: RunNonHeadless
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.11'
              addToPath: true

          - script: |
              mkdir "$(PipCache)" || echo "Cache directory already exists"
            displayName: 'Create Pip Cache Directory'

          - task: Cache@2
            inputs:
              key: 'python | "$(Agent.OS)"  | requirements.txt'
              restoreKeys: |
                python | "$(Agent.OS)"
              path: $(PipCache)
            continueOnError: true

          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
              pip install pytest-html
            displayName: 'Install Python Dependencies'

          - script: |
              python -m playwright install --with-deps
            displayName: 'Install Playwright Browsers with Dependencies'

          # Run Playwright non-headless tests using xvfb-run
          # xvfb - virtual display on Linux for running GUI applications
          - script: |
              export HEADLESS=false
              xvfb-run -a pytest tests_headless_false/ --html=report_playwright_bdd_nonheadless.html --maxfail=3 --disable-warnings -v
            displayName: 'Run Non-Headless Playwright BDD Tests using xvfb'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'report_playwright_bdd_nonheadless.html'
              ArtifactName: 'NonHeadlessTestReport'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'screenshots'